<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Northern Airport Reservation Form</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="../assets/css/main.css">
</head>
<body>
    <header>
        {{ template "navbar" }}
        
        {{ with .Client }}
            {{ if or (eq .RoleID 3) (eq .RoleID 4) (eq .RoleID 5) }}
                <nav class="navbar navbar-inverse" role="navigation">
                    <div class="container">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#admin-navbar-collapse">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                        </div>

                        <div class="collapse navbar-collapse" id="admin-navbar-collapse">
                            <ul class="nav navbar-nav">
                                <li class="dropdown">
                                    <a class="dropdown-toggle" href="/">Reports</a>
                                    {{- /* if user is staff or admin */ -}}
                                    <ul class="dropdown-menu">
                                        {{ if or (eq .RoleID 3) (eq .RoleID 4) }}
                                            <li class="nav-link" href="/">Test Report</li>
                                        {{ end }}
                                        <li class="nav-link" href="/driver-report">Driver Report</li>
                                    </ul>
                                </li>
                                {{ if or (eq .RoleID 3) (eq .RoleID 4) }}
                                    <li>
                                        <a href="/trips">Update Trip</a>
                                    </li>
                                    <li>
                                        <a href="/drivers">Add/Change/Remove Driver</a>
                                    </li>
                                    <li>
                                        <a href="/vehicles">Add/Change/Remove Vehicle</a>
                                    </li>
                                    <li>
                                        <a href="/venues">Add/Change/Remove Venue</a>
                                    </li>
                                    <li>
                                        <a href="/cities">Add/Change/Remove Cities</a>
                                    </li>
                                {{ end }}
                            </ul>
                        </div>
                    </div>
                </nav>
            {{ end }}
        {{ end }}
    </header>
    
    <main>
        <div class="container">
            <form id="reservation" method="post" action="/createreservation">
                <section class="client-info">
                    <header>
                        <h3>Client Information</h3>
                    </header>
                    {{ with .Client }}
                        {{ if .Authenticated }}
                            <input type="hidden" class="form-control" id="clientid" name="clientid" value={{.ClientID}}>
                        {{ else }}
                            <p>Create an account to have your information filled automatically! Click <a href="/signup">here</a></p>
                        {{end}}

                        <div class="row justify-content-around">
                            <div class="col-xs-4">
                                <label for="firstname">Firstname*</label>
                                {{ if .Authenticated }}
                                    <input type="text" class="form-control" id="firstname" name="firstname" value={{.Firstname}} required autofocus>
                                {{else}}
                                    <input type="text" class="form-control" id="firstname" name="firstname" placeholder="Firstname" required autofocus>
                                {{end}}
                            </div>
                        
                            <div class="col-xs-4">
                                <label for="lastname">Lastname*</label>
                                {{ if .Authenticated }}
                                    <input type="lastname" class="form-control" id="lastname" name="lastname" value={{.Lastname}} required>
                                {{else}}
                                    <input type="lastname" class="form-control" id="lastname" name="lastname" placeholder="Lastname" required>
                                {{end}}
                            </div>
                        </div>

                        <div class="row justify-content-around">
                            <div class="col-xs-4">
                                <label for="email">Email*</label>
                                {{ if .Authenticated }}
                                    <input type="email" class="form-control" id="email" name="email" value={{.Email}} required>
                                {{else}}
                                    <input type="email" class="form-control" id="email" name="email" placeholder="Email" required>
                                {{end}}
                            </div>
                            <div class="col-xs-4">
                                <label for="phone">Phone Number*</label>
                                {{ if .Authenticated }}
                                    <input type="tel" class="form-control" id="phone" name="phone" value={{.Phone}} required>
                                {{else}}
                                    <input type="tel" class="form-control" id="phone" name="phone" placeholder="Phone" required>
                                {{end}}
                            </div>
                        </div>

                        <div class="row justify-content-around">
                            <div class="col-xs-4">
                                <label for="streetaddress">Street Address</label>
                                {{ if .Authenticated }}
                                    <input type="text" class="form-control" id="streetaddress" name="streetaddress" value={{.StreetAddress}} required>
                                {{else}}
                                    <input type="text" class="form-control" id="streetaddress" name="streetaddress" value="XXXXXXXXXXXX" required>
                                {{end}}
                            </div>
                            <div class="col-xs-4">
                                <label for="city">City</label>
                                {{ if .Authenticated }}
                                    <input type="city" class="form-control" id="city" name="city" value={{.City}} required>
                                {{else}}
                                    <input type="city" class="form-control" id="city" name="city" value="XXXXXXXX" required>
                                {{end}}
                            </div>
                        </div>

                        <div class="row justify-content-around">
                            <div class="col-xs-4">
                                <label for="provstate">Province/State</label>
                                {{ if .Authenticated }}
                                    <input type="text" class="form-control" id="provstate" name="provstate" value={{.Province}} required>
                                {{else}}
                                    <input type="text" class="form-control" id="provstate" name="provstate" value="Ontario" required>
                                {{end}}
                            </div>
                            <div class="col-xs-4">
                                <label for="postalzip">Postal/Zip Code</label>
                                {{ if .Authenticated }}
                                    <input type="postalzip" class="form-control" id="postalzip" name="postalzip" value={{.PostalCode}} pattern="([A-Za-z][0-9][A-Za-z] [0-9][A-Za-z][0-9]|[A-Za-z][0-9][A-Za-z][0-9][A-Za-z][0-9]|(\d{5}([\-]\d{4})?))" required>
                                {{else}}
                                    <input type="postalzip" class="form-control" id="postalzip" name="postalzip" value="Z9Z 9Z9" pattern="([A-Za-z][0-9][A-Za-z] [0-9][A-Za-z][0-9]|[A-Za-z][0-9][A-Za-z][0-9][A-Za-z][0-9]|(\d{5}([\-]\d{4})?))" required>
                                {{end}}
                            </div>
                            <div class="form-group col-3">
                            
                            </div>
                        </div>

                        <div class="row justify-content-around">
                            <div class="col-xs-4">
                                <label for="country">Country</label>
                                {{ if .Authenticated }}
                                    <input type="text" class="form-control" id="country" name="country" value={{.Country}} required>
                                {{else}}
                                    <input type="text" class="form-control" id="country" name="country" value="Canada" required>
                                {{end}}
                            </div>
                        </div>

                        <h3>Travel Agents Use Only</h3>
                        <div class="travel-agent-info">
                            <div class="row justify-content-around">    
                                <div class="col-xs-4">
                                    <label for="iata">Travel Agent IATA#</label>
                                    <input type="text" class="form-control" id="iata" name="iata" placeholder="IATA #">
                                </div>
                                <div class="col-xs-4">
                                    <label for="agentname">Agent Name</label>
                                    <input type="text" class="form-control" id="agentname" name="agentname" placeholder="Agent Name">
                                </div>
                            </div>
                        </div>
                    {{ end }}
                </section>
                
                <section class="trip-info">
                    <header>
                        <h3>Trip Information</h3>
                    </header>
                    <div class="row justify-content-around">    
                        <div class="col-xs-4">
                            <label for="reservationtype">Reservation Type</label>
                            <select class="form-control" id="reservationtype" name="reservationtype">
                                <option value="1">One Way</option>
                                <option value="2">Round Trip</option>
                            </select>
                        </div>
                    </div>

                    <div class="row justify-content-around">    
                        <div class="col-xs-4">
                            <label for="departurecity">Departure City</label>
                            <select class="form-control" id="departurecity" name="departurecity" placeholder="Departure City">
                                <option value="0">Select a City</option>
                                {{ range .Cities }}
                                    <option value="{{ .CityID }}">{{ .CityName }}</option>
                                {{ end }}
                            </select>
                        </div>
                        <div class="col-xs-4">
                            <label for="departurevenue">Departure Venue</label>
                            <select class="form-control" id="departurevenue" name="departurevenue" placeholder="Departure Venue">
                                <option value="0">First Select a City</option>
                            </select>
                        </div>
                    </div>

                     <div id="pickupaddress-div" class="row justify-content-around">    
                        <div class="col-xs-4">
                            <label for="pickupaddress">Pickup Address</label>
                            <input type="text" class="form-control" id="pickupaddress" name="pickupaddress" placeholder="Pickup Address">
                        </div>
                    </div>

                    <div class="row justify-content-around">    
                        <div class="col-xs-4">
                            <label for="destinationcity">Destination City</label>
                            <select class="form-control" id="destinationcity" name="destinationcity" placeholder="Destination City">
                                <option value="0">Select a City</option>
                                {{ range .Cities }}
                                    <option value="{{ .CityID }}">{{ .CityName }}</option>
                                {{ end }}
                            </select>
                        </div>
                        <div class="col-xs-4">
                            <label for="destinationvenue">Destination Venue</label>
                            <select class="form-control" id="destinationvenue" name="destinationvenue" placeholder="Destination Venue">
                                <option value="0">First Select a City</option>
                            </select>
                        </div>
                    </div>

                    <div id="dropoffaddress-div" class="row justify-content-around">    
                        <div class="col-xs-4">
                            <label for="dropoffaddress">Dropoff Address</label>
                            <input type="text" class="form-control" id="dropoffaddress" name="dropoffaddress" placeholder="Dropoff Address">
                        </div>
                    </div>

                    <div class="row justify-content-around">
                        <div class="col-xs-4">
                            <label for="departuredate">Departure Date</label>
                            <input type="date" class="form-control" id="departuredate" name="departuredate" required>
                        </div>
                        <div class="col-xs-4">
                            <label for="departuretime">Departure Time</label>
                            <select class="form-control" id="departuretime" name="departuretime" placeholder="Departure Time">
                                <option value="0">First Select Cities and Venues</option>
                            </select>
                        </div>
                    </div>
                    
                    <p>Number of Passengers</p>  
                    <div class="row justify-content-around">
                        <div class="col-xs-2">
                            <label for="departurenumadults">Adults</label>
                            <input type="text" class="form-control" id="departurenumadults" name="departurenumadults" value="0">
                        </div>
                        <div class="col-xs-2">
                            <label for="departurenumseniors">Seniors (65+)</label>
                            <input type="text" class="form-control" id="departurenumseniors" name="departurenumseniors" value="0">
                        </div>
                        <div class="col-xs-2">
                            <label for="departurenumstudents">Students</label>
                            <input type="text" class="form-control" id="departurenumstudents" name="departurenumstudents" value="0">
                        </div>
                        <div class="col-xs-2">
                            <label for="departurenumchildren">Children (under 12)</label>
                            <input type="text" class="form-control" id="departurenumchildren" name="departurenumchildren" value="0">
                        </div>
                    </div>
                </section>

                <section id="return-info">
                    <header>
                        <h3>Return Trip Information</h3>  
                    </header>
                    <div class="row justify-content-around">    
                        <div class="col-xs-4">
                            <label for="returndeparturecity">Return Departure City</label>
                            <select class="form-control" id="returndeparturecity" name="returndeparturecity" placeholder="Departure City">
                                {{ range .Cities }}
                                    <option value="{{ .CityID }}">{{ .CityName }}</option>
                                {{ end }}
                            </select>
                        </div>
                        <div class="col-xs-4">
                            <label for="returndeparturevenue">Return Departure Venue</label>
                            <select class="form-control" id="returndeparturevenue" name="returndeparturevenue" placeholder="Departure Venue">
                                <option value="0">First Select a City</option>
                            </select>
                        </div>
                        <div class="form-group col-3"></div>
                    </div>

                    <div id="return-pickupaddress-div" class="row justify-content-around">    
                        <div class="col-xs-4">
                            <label for="return-pickupaddress">Return Pickup Address</label>
                            <input type="text" class="form-control" id="return-pickupaddress" name="return-pickupaddress" placeholder="Return Pickup Address">
                        </div>
                    </div>

                    <div class="row justify-content-around">    
                        <div class="col-xs-4">
                            <label for="returndestinationcity">Return Destination City</label>
                            <select class="form-control" id="returndestinationcity" name="returndestinationcity" placeholder="Destination City">
                                <option value="0">Select a City</option>
                                {{ range .Cities }}
                                    <option value="{{ .CityID }}">{{ .CityName }}</option>
                                {{ end }}
                            </select>
                        </div>
                        <div class="col-xs-4">
                            <label for="returndestinationvenue">Return Destination Venue</label>
                            <select class="form-control" id="returndestinationvenue" name="returndestinationvenue" placeholder="Destination Venue">
                                <option value="0">First Select a City</option>
                            </select>
                        </div>
                    </div>

                    <div id="return-dropoffaddress-div" class="row justify-content-around">    
                        <div class="col-xs-4">
                            <label for="return-dropoffaddress">Return Dropoff Address</label>
                            <input type="text" class="form-control" id="return-dropoffaddress" name="return-dropoffaddress" placeholder="Return Dropoff Address">
                        </div>
                    </div>

                    <div class="row justify-content-around">    
                        <div class="col-xs-4">
                            <label for="returndeparturedate">Return Departure Date</label>
                            <input type="date" class="form-control" id="returndeparturedate" name="returndeparturedate">
                        </div>
                        <div class="col-xs-4">
                            <label for="returndeparturetime">Return Departure Time</label>
                            <select class="form-control" id="returndeparturetime" name="returndeparturetime" placeholder="Departure Time">
                                <option value="0">First Select Cities and Venues</option>
                            </select>
                        </div>
                    </div>

                    <p>Number of Return Passengers</p>  
                    <div class="row justify-content-around">
                        <div class="col-xs-2">
                            <label for="returnnumadults">Adults</label>
                            <input type="text" class="form-control" id="returnnumadults" name="returnnumadults" value="0">
                        </div>
                        <div class="col-xs-2">
                            <label for="returnnumseniors">Seniors (65+)</label>
                            <input type="text" class="form-control" id="returnnumseniors" name="returnnumseniors" value="0">
                        </div>
                        <div class="col-xs-2">
                            <label for="returnnumstudents">Students</label>
                            <input type="text" class="form-control" id="returnnumstudents" name="returnnumstudents" value="0">
                        </div>
                        <div class="col-xs-2">
                            <label for="returnnumchildren">Children (under 12)</label>
                            <input type="text" class="form-control" id="returnnumchildren" name="numchildren" value="0">
                        </div>
                    </div>
                </section>

                <section id="notes">
                    <header>
                        <h3>Notes</h3>
                    </header>
                    <div class="row justify-content-around">    
                        <div class="col-xs-4">
                            <label for="internalnotes">Internal Notes</label>
                            <textarea class="form-control" id="internalnotes" name="internalnotes" cols="40" rows="5"></textarea>
                        </div>
                        <div class="col-xs-4">
                            <label for="drivernotes">Driver Notes</label>
                            <textarea class="form-control" id="drivernotes" name="drivernotes" cols="40" rows="5"></textarea>
                        </div>
                    </div>
                </section>

                <section id="price">
                    <header>
                        <h3>Price</h3>
                    </header>
                    <div class="row justify-content-around"> 
                        <div class="col-xs-4">
                            <label for="promocode">Promotional Code</label>
                            <input type="text" class="form-control" id="promocode" name="promocode">
                        </div>
                        <div class="col-xs-4">
                            <label for="tripprice">Price</label>
                            <input type="text" class="form-control" id="tripprice" name="tripprice">
                        </div>
                    </div>
                </section>
                <button id="calc-price" type="button" name="calc-price" class="btn btn-primary">Calculate Price</button>
                <!--<button id="submit" type="submit" name="submit" class="btn btn-primary">Submit</button>-->
                <button id="submit-res" type="button" class="btn btn-primary" onclick="return Validate()">Submit Reservation</button>
            </form>
        </div>
    </main>

    {{ template "footer" }}

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js"></script>
    
    <script type="text/javascript" >

        var firstname = document.getElementById("firstname");
        var lastname = document.getElementById("lastname");
        var email = document.getElementById("email");
        var phone = document.getElementById("phone");
        
        var reservationtype = document.getElementById("reservationtype")

        var departurevenue = document.getElementById("departurevenue");
        var departurecity = document.getElementById("departurecity");
        var departuretime = document.getElementById("departuretime");
        var departuredate = document.getElementById("departuredate");

        var destinationvenue = document.getElementById("destinationvenue");
        var destinationcity = document.getElementById("destinationcity");

        var returndeparturevenue = document.getElementById("returndeparturevenue");
        var returndeparturecity = document.getElementById("returndeparturecity");
        var returndeparturetime = document.getElementById("returndeparturetime");
        var returndeparturedate = document.getElementById("returndeparturedate");

        var returndestinationvenue = document.getElementById("returndestinationvenue");
        var returndestinationcity = document.getElementById("returndestinationcity");

        var pickupaddress = document.getElementById('pickupaddress-div');
        var dropoffaddress = document.getElementById('dropoffaddress-div');
        var returnpickupaddress = document.getElementById('return-pickupaddress-div');
        var returndropoffaddress = document.getElementById('return-dropoffaddress-div');

        var discountcode = document.getElementById("promocode");
        var tripprice = document.getElementById("tripprice");
        var calcprice = document.getElementById("calc-price");

        var venuecount = {{ .VenueCount }};
        var venues = {{ .Venues }};

        var tempprice = 0.0;
        var totalprice = 0.0;

        reservationtype.onchange = function() { 
            if(reservationtype.value == 2) {
                document.getElementById('return-info').style.display = "block";
            } else {
                document.getElementById('return-info').style.display = "none";
            }
        };

        departurecity.onchange = UpdateVenue(departurecity, departurevenue);
        destinationcity.onchange = UpdateVenue(destinationcity, destinationvenue);
        returndeparturecity.onchange = UpdateVenue(returndeparturecity, returndeparturevenue);
        returndestinationcity.onchange = UpdateVenue(returndestinationcity, returndestinationvenue);

        departurevenue.onchange = ShowAddress(departurevenue, pickupaddress);
        destinationvenue.onchange = ShowAddress(destinationvenue, dropoffaddress);
        returndeparturevenue.onchange = ShowAddress(returndeparturevenue, returnpickupaddress);
        returndestinationvenue.onchange = ShowAddress(returndestinationvenue, returndropoffaddress);

        departuretime.onclick = UpdateTime(departurecity, destinationcity, departuretime);
        returndeparturetime.onclick = UpdateTime(returndeparturecity, returndestinationcity, returndeparturetime);
        
        function ShowAddress(venuechanged, addresstoshow) {
            return function() {
                if(venuechanged.value == 100) {
                    addresstoshow.style.display = "block";
                } else {
                    addresstoshow.style.display = "none";
                }
            };
        };

        function UpdateVenue(cityselect, venueselect) {
            return function() {
                var selectvenuecount = venueselect.options.length;

                for(i=0; i<selectvenuecount; i++)
                {
                    venueselect.remove(venueselect.options[i]);
                }

                var defaultopt = document.createElement('option');
                defaultopt.appendChild(document.createTextNode('select value'));
                defaultopt.value = 0;
                venueselect.appendChild(defaultopt);

                {{ range .Venues }}
                    var temp = {{ .VenueID }};
                    var cityid = {{ .CityID }}
                    if(cityselect.options[cityselect.selectedIndex].value == cityid)
                    {
                        var opt = document.createElement('option');
                        var venueid = {{ .VenueID }}
                        var venuename = {{ .VenueName }}
                        
                        opt.appendChild(document.createTextNode(venuename));
                        opt.value = venueid;
                
                        venueselect.appendChild(opt);
                    }
                {{ end }}
            };
        };

        function UpdateTime(departurecityselect, destinationcityselect, timeselect) {
            return function() {
                var departurenorthoffset = -1;
                var departuresouthoffset = -1;
                var destinationnorthoffset = -1;
                var destinationsouthoffset = -1;
                var departurecityid = departurecityselect.options[departurecityselect.selectedIndex].value;
                var destinationcityid = destinationcityselect.options[destinationcityselect.selectedIndex].value;

                var departuretimecount = timeselect.options.length;

                for(i=0; i<departuretimecount; i++)
                {
                    timeselect.remove(timeselect.options[i]);
                }

                {{ range .Cities }}

                    if(departurecityid == {{ .CityID }})
                    {
                        departurenorthoffset = {{ .NorthOffset }};
                        departuresouthoffset = {{ .SouthOffset }};
                    }

                    if(destinationcityid == {{ .CityID }})
                    {
                        destinationnorthoffset = {{ .NorthOffset }};
                        destinationsouthoffset = {{ .SouthOffset }};
                    }

                {{ end }}
                
                {{ range .DepartureTimes }}

                    var opt = document.createElement('option');
                    var time = {{ .DepartureTime }};
                    var departuretimeid = {{ .DepartureTimeID }};
                    var departuretimecityid = {{ .CityID }}                 
            
                    if(departurecityid == 1) 
                    {
                        if(departuretimecityid == 1)
                        {
                            opt.appendChild(document.createTextNode(time));
                            opt.value = departuretimeid;
                            timeselect.appendChild(opt);
                        }
                    } 
                    else if(departurecityid == 2) 
                    {
                        if(departuretimecityid == 2)
                        {
                            opt.appendChild(document.createTextNode(time));
                            opt.value = departuretimeid;
                            timeselect.appendChild(opt);
                        }
                    }
                    else
                    {
                        if(departurecityid == 0 || destinationcityid == 0)
                        {
                            if(timeselect.options.length == 0)
                            {
                                opt.appendChild(document.createTextNode('please select departure and destination venues'));
                                opt.value = 0;
                                timeselect.appendChild(opt);
                            }
                        }
                        else if (departurenorthoffset > destinationnorthoffset)
                        {
                            if(departuretimecityid == 2)
                            {
                                var timewithoffset = time + departurenorthoffset;
                                opt.appendChild(document.createTextNode(timewithoffset));
                                opt.value = departuretimeid;
                                timeselect.appendChild(opt);
                            }
                        }
                        else
                        {
                            if(departuretimecityid == 1)
                            {
                                var timewithoffset = time + departuresouthoffset;
                                opt.appendChild(document.createTextNode(timewithoffset));
                                opt.value = departuretimeid;
                                timeselect.appendChild(opt);
                            }
                        }
                    }

                {{ end }}
            }
        };

        function GetPrice(departurecityid, destinationcityid, retdeparturecityid, retdestinationcityid, 
            numpassengers, customertypeid, reservationtypeid, departurevenueid, destinationvenueid,
            retdeparturevenueid, retdestinationvenueid, discount, callback){
            var xhr = new XMLHttpRequest();

            alert("discount code: "+discount);

            xhr.open('GET', '/price?departurecityid='+departurecityid+'&destinationcityid='+
                destinationcityid+'&retdeparturecityid='+retdeparturecityid+'&retdestinationcityid='+
                retdestinationcityid+'&numpassengers='+numpassengers+'&customertypeid='+customertypeid+
                '&reservationtypeid='+reservationtypeid+'&departurevenueid='+departurevenueid+
                '&destinationvenueid='+destinationvenueid+'&retdeparturevenueid='+retdeparturevenueid+
                '&retdestinationvenueid='+retdestinationvenueid+'&discount='+discount);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.onload = function() {
                if (xhr.status != 200) {
                    alert('failed:' + xhr.status);
                } else {
                    tempprice = callback(xhr.responseText);
                }
            }

            try {
                xhr.send();
            } catch (err) {
                alert("Error sending request: " + err)
            }
        };

        function ReturnPrice(price) {
            totalprice = parseFloat(totalprice) + parseFloat(price);
            tripprice.value = parseFloat(totalprice).toFixed(2);
        };

        function CalcPrice(){
            var departurenumadults = document.getElementById("departurenumadults").value;
            var departurenumseniors = document.getElementById("departurenumseniors").value;
            var departurenumstudents = document.getElementById("departurenumstudents").value;
            var departurenumchildren = document.getElementById("departurenumchildren").value;

            var returnnumadults = document.getElementById("returnnumadults").value;
            var returnnumseniors = document.getElementById("returnnumseniors").value;
            var returnnumstudents = document.getElementById("returnnumstudents").value;
            var returnnumchildren = document.getElementById("returnnumchildren").value;

            var departurecityid = departurecity.options[departurecity.selectedIndex].value;
            var destinationcityid = destinationcity.options[destinationcity.selectedIndex].value;
            var departurevenueid = departurevenue.options[departurevenue.selectedIndex].value;
            var destinationvenueid = destinationvenue.options[destinationvenue.selectedIndex].value;

            var retdeparturecityid = 0;
            var retdestinationcityid = 0;
            var retdeparturevenueid = 0;
            var retdestinationvenueid = 0;

            if(reservationtype.value == "2")
            {
                retdeparturecityid = returndeparturecity.options[returndeparturecity.selectedIndex].value;
                retdestinationcityid = returndestinationcity.options[returndestinationcity.selectedIndex].value;
                retdeparturevenueid = returndeparturevenue.options[returndeparturevenue.selectedIndex].value;
                retdestinationvenueid = returndestinationvenue.options[returndestinationvenue.selectedIndex].value;
            }

            totalprice = 0.0;

            //are there passengers?
            if(departurecityid != 0 && destinationcityid != 0)
            {
                if((departurenumadults + departurenumseniors + departurenumstudents + departurenumchildren) > 0)
                {
                    var tempadults = departurenumadults;
                    var tempseniors = departurenumseniors;
                    var tempstudents = departurenumstudents;
                    var tempchildren = departurenumchildren;
     
                    //is this a return trip
                    if(reservationtype.value == "2")
                    {
                        if((returnnumadults + returnnumseniors + returnnumstudents + returnnumchildren) > 0)
                        {
                            //if return adult passengers exist get prices
                            if(returnnumadults > 0)
                            {
                                GetPrice(departurecityid, destinationcityid, retdeparturecityid, retdestinationcityid, returnnumadults, 1, 2, departurevenueid, destinationvenueid, retdeparturevenueid, retdestinationvenueid, discountcode.value, ReturnPrice);
                                tempadults = tempadults - returnnumadults
                            }

                            //if return senior passengers exist get prices
                            if(returnnumseniors > 0)
                            {
                                GetPrice(departurecityid, destinationcityid, retdeparturecityid, retdestinationcityid, returnnumseniors, 2, 2, departurevenueid, destinationvenueid, retdeparturevenueid, retdestinationvenueid, discountcode.value, ReturnPrice);
                                tempseniors = tempseniors - returnnumseniors
                            }

                            //if return student passengers exist get prices
                            if(returnnumstudents > 0)
                            {
                                GetPrice(departurecityid, destinationcityid, retdeparturecityid, retdestinationcityid, returnnumstudents, 3, 2, departurevenueid, destinationvenueid, retdeparturevenueid, retdestinationvenueid, discountcode.value, ReturnPrice);
                                tempstudents = tempstudents - returnnumstudents
                            }

                            //if return children passengers exist get prices
                            if(returnnumchildren > 0)
                            {
                                GetPrice(departurecityid, destinationcityid, retdeparturecityid, retdestinationcityid, returnnumchildren, 4, 2, departurevenueid, destinationvenueid, retdeparturevenueid, retdestinationvenueid, discountcode.value, ReturnPrice);
                                tempchildren = tempchildren - returnnumchildren
                            }
                        } else {
                            alert("Reservation type is return, but there are no return passengers");
                        }
                    }

                    //if return adult passengers exist get prices
                    if(tempadults > 0)
                    {
                        GetPrice(departurecityid, destinationcityid, 0, 0, departurenumadults, 1, 1, departurevenueid, destinationvenueid, retdeparturevenueid, retdestinationvenueid, discountcode.value, ReturnPrice);
                    }

                    //if return senior passengers exist get prices
                    if(tempseniors > 0)
                    {
                        GetPrice(departurecityid, destinationcityid, 0, 0, departurenumseniors, 2, 1, departurevenueid, destinationvenueid, retdeparturevenueid, retdestinationvenueid, discountcode.value, ReturnPrice);
                    }

                    //if return student passengers exist get prices
                    if(tempstudents > 0)
                    {
                        GetPrice(departurecityid, destinationcityid, 0, 0, departurenumstudents, 3, 1, departurevenueid, destinationvenueid, retdeparturevenueid, retdestinationvenueid, discountcode.value, ReturnPrice);
                    }

                    //if return children passengers exist get prices
                    if(tempchildren > 0)
                    { 
                        GetPrice(departurecityid, destinationcityid, 0, 0, departurenumchildren, 4, 1, departurevenueid, destinationvenueid, retdeparturevenueid, retdestinationvenueid, discountcode.value, ReturnPrice);
                    }

                    return true;

                } else {
                    alert("No passengers");

                    return false;
                }
            } else {
                alert("Missing departure and/or destination cities");

                return false;
            }
        };
        
        calcprice.onclick = CalcPrice;

        function Validate(){
            var formvalid = true;
            
            if(firstname.value == "" && formvalid == true)
            {
                alert("Please enter first name");
                formvalid = false;
            }

            if(lastname.value == "" && formvalid == true)
            {
                alert("Please enter last name");
                formvalid = false;
            }

            if(email.value == "" && formvalid == true)
            {
                //improve this to look for correct email format
                alert("Please enter email");
                formvalid = false;

            }

            if(phone.value == "" && formvalid == true)
            {
                //improve this to look for correct phone number format
                alert("Please enter phone number");
                formvalid = false;
            }
            
            if (departurecity.value != 2 && destinationcity.value != 2 && formvalid == true)
            {
                alert("Trips must either depart from or be destined to 'Toronto Pearson and Hotels'");
                formvalid = false;
            }

            if (destinationvenue.value == 0 && formvalid == true)
            {
                alert("Please select destination venue");
                formvalid = false;
            }

            if (departuretime.value == 0 && formvalid == true)
            {
                alert("Please select departure time");
                formvalid = false;
            }

            today = new Date();
            tomorrow = new Date();
            tomorrow.setDate(tomorrow.getDate() + 1);
            
            var datearray = departuredate.value.split("-");
            jsdeparturedate = new Date();
            jsdeparturedate.setYear(datearray[0]);
            jsdeparturedate.setMonth(datearray[1]-1);
            jsdeparturedate.setDate(datearray[2]);

            if (departuredate.value == "" && formvalid == true)
            {
                alert("Please select departure date");
                formvalid = false;
            }

            if (jsdeparturedate < today && formvalid == true) 
            {
                alert("Cannot select a departure date in the past");
                formvalid = false;
            }
            
            if (jsdeparturedate < tomorrow && formvalid == true) 
            {
                alert("Cannot select a departure date within 24 hours");
                formvalid = false;
            }
            
            if(reservationtype.value == 2 && formvalid == true)
            {
                datearray = returndeparturedate.value.split("-");
                jsreturndeparturedate = new Date();
                jsreturndeparturedate.setYear(datearray[0]);
                jsreturndeparturedate.setMonth(datearray[1]-1);
                jsreturndeparturedate.setDate(datearray[2]);
            
                if (jsreturndeparturedate < jsdeparturedate && formvalid == true)
                {
                    alert("Return date cannot precede departure date");
                    formvalid = false;
                }

                if (returndeparturecity.value != 2 && returndestinationcity.value != 2 && formvalid == true)
                {
                    alert("Trips must either depart from or be destined to 'Toronto Pearson and Hotels'");
                    formvalid = false;
                }

                if (returndeparturevenue.value == 0 && formvalid == true)
                {
                    alert("Please select return departure venue");
                    formvalid = false;
                }

                if (returndestinationvenue.value == 0 && formvalid == true)
                {
                    alert("Please select return destination venue");
                    formvalid = false;
                }

                if (returndeparturetime.value == 0 && formvalid == true)
                {
                    alert("Please select return departure time");
                    formvalid = false;
                }    
            }

            if(formvalid == true)
            {
                if (!CalcPrice())
                {
                    alert("Problem calculating price");
                    formvalid = false;
                }
            }
            

            if (formvalid)
            {
                document.getElementById("reservation").submit();
            }
            
        }

    </script>
</body>
</html>
